name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Update APT repository
      run: |
        sudo apt update
    
    - name: Get the LLVM installation script
      run: |
        wget https://apt.llvm.org/llvm.sh
    
    - name: Install LLVM 17
      run: |
        chmod +x llvm.sh; sudo ./llvm.sh 17 all
    
    - name: Install Ninja
      run: |
        sudo apt install -y ninja-build

    - name: Set reusable strings
      # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: >
        cmake ${{ github.workspace }} -B ${{ steps.strings.outputs.build-output-dir }} -G "Ninja"
        -DCMAKE_CXX_COMPILER="clang++-17"
        -DCMAKE_C_COMPILER="clang-17"
        -DCMAKE_BUILD_TYPE="Debug"

    - name: Build
      # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config "Debug"

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      # Execute tests defined by the CMake configuration. Note that --build-config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest --build-config "Debug"

  build-windows:
    runs-on: windows-latest
    # Run a job for each of the specified target architectures:
    strategy:
      matrix:
        arch:
          - amd64
          - amd64_x86
          - amd64_arm64
    steps:
      - uses: actions/checkout@v4
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}
          vsversion: 2019

      - name: Configure CMake
        run: |
          cmake ${{ github.workspace }} -B -G "NMake Makefiles"
      
      - name: Build
        run: |
          cmake --build ${{ github.workspace }}/build